# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "denser-retriever"
version = "0.1.2"
description = "Enterprise-grade AI retriever solution that seamlessly integrates to enhance your AI applications."
readme = "README.md"
authors = ["denser-org <support@denser.ai>"]
license = "MIT"
repository = "https://github.com/denser-org/denser-retriever"
homepage = "https://github.com/denser-org/denser-retriever"
packages = [{include = "denser_retriever"}]

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = []  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
]

[tool.poetry.scripts]
# Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
"denser-retriever" = "denser_retriever.__main__:app"

[tool.poetry.dependencies]
python = "^3.10.0"
#python = "^3.11.0"

typer = {extras = ["all"], version = "^0.12.1"}
rich = "^10.14.0"
pytrec-eval = "^0.5"

sentence-transformers = "^2.7.0"  # Specify the version of sentence-transformers
# torch = [{markers = "sys_platform == 'darwin'", url = "https://download.pytorch.org/whl/cpu/torch-1.13.1-cp310-none-macosx_11_0_arm64.whl"},
# {markers = "sys_platform == 'linux'", url="https://download.pytorch.org/whl/cu117/torch-1.13.1%2Bcu117-cp310-cp310-linux_x86_64.whl"}]
torch = "^1.13.1"
elasticsearch = "^8.13.0"
pymilvus = "^2.4.4"
datasets = "^2.18.0"
xgboost = "^2.0.3"
langchain-community = "^0.2.0"
langchain-text-splitters = "^0.2.2"
beautifulsoup4 = "^4.12.3"
pydantic-settings = "^2.2.1"
pydantic = {extras = ["dotenv"], version = "^2.7.1"}
fake_useragent = "^1.5.1"
pypdf = "^4.2.0"
langchain-huggingface = "^0.0.3"
langchain-milvus = "^0.1.1"
langchain-elasticsearch = "^0.2.2"
numpy = "^1.26.4"
langchain-core = "0.2.10"
langchain-qdrant = "^0.1.2"

[tool.poetry.dev-dependencies]
pytest = "^7.4.3"
pytest-html = "^3.1.1"
pytest-cov = "^3.0.0"
bandit = "^1.7.1"
ruff = "^0.4.4"
pre-commit = "^2.21.0"
coverage = "^6.1.2"
coverage-badge = "^1.1.0"

[tool.poetry.group.dev.dependencies]
streamlit = "^1.33.0"
openai = "^0.28"
tiktoken = "^0.6.0"
ipykernel = "^6.29.5"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
  "-s"
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "denser-retriever"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
